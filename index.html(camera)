<html>

<head>
    <title>Object Detection with Three.js</title>
    <style>
        body {
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background-color: #f0f0f0;
        }

        canvas {
            width: 100%;
            height: 80%;
        }

        #video-container {
            position: absolute;
            top: 10px;
            right: 10px;
            border: 2px solid black;
            width: 320px;
            height: 240px;
        }
    </style>
    <meta charset="UTF-8">
</head>

<body>
    <div id="video-container">
        <img id="video-feed" src="/video_feed" alt="Video Feed" style="width: 100%; height: 100%;">
    </div>

    <script type="module">
        import * as THREE from './three.js';
        import { OBJLoader } from './OBJLoader.js';
        import { MTLLoader } from './MTLLoader.js';

        const renderer = new THREE.WebGLRenderer({ antialias: true });
        renderer.shadowMap.enabled = true;
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        const scene = new THREE.Scene();
        scene.background = new THREE.Color(0xf0f0f0);

        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.set(0, 2, 5);

        const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
        scene.add(ambientLight);

        const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
        directionalLight.position.set(10, 10, 10);
        directionalLight.castShadow = true;
        scene.add(directionalLight);

        let monkey = null;
        const textureLoader = new THREE.CubeTextureLoader();
        const environmentMap = textureLoader.load([
            'posx.jpg', 'negx.jpg', 'posy.jpg', 'negy.jpg', 'posz.jpg', 'negz.jpg'
        ]);
        scene.environment = environmentMap;

        new MTLLoader().load('camera_rg1.mtl', function (materials) {
            materials.preload();
            new OBJLoader()
                .setMaterials(materials)
                .load('camera_rg1.obj', function (object) {
                    monkey = object;
                    monkey.traverse(function (child) {
                        if (child instanceof THREE.Mesh) {
                            child.receiveShadow = true;
                            child.castShadow = true;
                        }
                    });
                    scene.add(monkey);
                });
        });

        // Add ground
        const ground = new THREE.Mesh(
            new THREE.BoxGeometry(10, 1, 10),
            new THREE.MeshLambertMaterial({ color: 0xffaaaa })
        );
        ground.receiveShadow = true;
        ground.position.y = -2;
        scene.add(ground);

        async function fetchDetectionData() {
            try {
                const response = await fetch('/detection');
                const data = await response.json();
                if (monkey && data.detected) {
                    monkey.position.set(data.x, data.y, data.z);
                }
            } catch (error) {
                console.error('Error fetching detection data:', error);
            }
        }

        const animate = function () {
            requestAnimationFrame(animate);
            fetchDetectionData(); 
            if (monkey) {
                monkey.rotation.x += 0.01;
                monkey.rotation.y += 0.01;
            }
            renderer.render(scene, camera);
        };
        animate();
    </script>
</body>

</html>
